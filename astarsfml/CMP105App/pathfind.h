#include <iostream>
#include <iomanip>
#include <queue>
#include <list>
#include <string>
#include <math.h>
#include <ctime>
#include <conio.h>
#include <windows.h>

const int width = 91;
const int height = 50;
bool foundExit = false;

struct Coord {
	Coord(int nx, int ny)
	{
		x = nx;
		y = ny;
	}

	int x;
	int y;
};
std::list<Coord> coord;

struct node
{
	node()
	{
		fCost = 0;
		gCost = 0;
		hCost = 0;
	}
	node(int x, int y, int xpar, int ypar, int g, int f, int h)
	{
		xPos = x, yPos = y, xParent = xpar, yParent = ypar, fCost = f, gCost = g, hCost = h;
	}
	int weght = 0;
	int xPos, yPos;
	int xParent, yParent;
	int fCost, gCost, hCost;
	bool closed;

	int getFcost() { return fCost; }

	void setFcost(int& xDest, int& yDest)
	{
		fCost = gCost + getHcost(xDest, yDest);
	}

	int getHcost(int& xDest, int& yDest)
	{
		int xD, yD, d;
		xD = xDest - xPos;
		yD = yDest - yPos;

		d = abs(xD) + abs(yD);
		return(d);

	}

};

node gridArray[width][height];
struct priorityOrder {
	;
	bool operator()(node& a, node& b)
	{
		return a.getFcost() > b.getFcost();
	}
};

std::priority_queue<node, std::vector<node>, priorityOrder> openList;



void initialiseGrid(node grid[width][height])
{
	int popArray[width][height] =
	{
		{2,2,2,2,2,2,2,2,2,2     ,2,2,2,2,2,2,2,2,2,2   ,2,1,1,1,5,1,2,1,1,2     ,2,3,3,3,3,2,2,2,1,1  ,1,1,2,1,1,2,1,2,2,2},
		{2,2,2,2,2,2,2,2,2,2     ,2,2,2,2,2,2,2,2,2,2   ,2,1,1,1,5,1,1,1,1,1    ,2,2,3,3,3,3,2,2,1,1  ,1,1,1,1,1,1,1,2,2,2},
		{2,2,3,3,3,3,3,2,2,2     ,2,2,2,2,2,2,2,2,2,2   ,2,1,1,1,18,11,1,1,1,1  ,2,2,3,3,3,3,3,3,3,3  ,3,3,3,3,1,1,1,2,2,2},
		{2,2,3,3,3,3,2,2,2,2     ,2,2,2,2,2,2,2,2,2,2   ,2,1,1,1,12,15,11,1,1,1 ,1,2,2,3,3,3,3,3,3,2  ,2,2,2,3,3,1,1,2,2,2},
		{2,2,3,3,3,3,2,2,2,2     ,2,2,2,2,2,2,2,2,2,2   ,2,1,1,1,1,12,15,11,1,1 ,1,1,1,2,3,3,3,2,2,2  ,2,2,2,2,3,3,1,2,2,2},
		{2,2,3,3,3,21,4,4,6,2    ,2,2,2,2,2,2,2,2,2,2   ,2,1,1,1,1,1,12,15,11,1 ,1,1,1,2,3,3,3,2,1,1  ,1,1,1,2,2,3,3,2,2,2},
		{2,2,3,3,3,3,2,2,5,2     ,2,2,2,2,2,2,2,2,2,2   ,2,1,1,1,1,1,1,12,15,11 ,1,1,1,2,3,3,2,2,1,1  ,1,1,1,2,2,3,3,2,2,2},
		{2,2,3,3,3,3,2,2,2,2     ,2,2,2,2,2,2,2,2,2,2   ,2,2,1,1,1,1,1,1,12,15  ,11,1,1,2,3,3,2,2,1,1 ,1,1,1,2,2,3,3,2,2,2},
		{2,2,2,3,3,3,2,2,2,2     ,2,2,2,2,1,1,2,2,2,2   ,2,2,1,1,1,1,1,1,1,12   ,17,1,1,1,3,3,2,2,1,1 ,1,1,1,2,2,3,3,2,2,2},
		{1,2,2,2,3,2,2,2,2,2     ,2,2,1,1,1,1,1,1,2,2   ,2,2,2,1,1,2,2,1,1,1    ,5,1,1,1,3,3,2,2,1,1  ,1,1,1,2,2,3,3,2,2,2},

		{1,1,1,2,2,2,2,2,2,2     ,2,2,1,1,1,1,1,1,2,2   ,2,2,2,2,2,2,2,1,1,1    ,5,1,1,1,3,3,2,2,1,1  ,1,1,1,2,2,3,3,2,2,2},
		{1,1,1,1,2,2,2,2,2,2     ,2,2,1,1,1,1,1,2,2,2   ,2,2,2,2,2,2,2,1,1,1    ,5,1,1,1,2,3,3,2,2,1  ,1,2,2,2,3,3,2,2,2,2},
		{11,1,1,1,1,2,2,2,2,2    ,2,2,2,2,2,1,2,2,2,2   ,2,2,2,2,2,2,2,1,1,1    ,5,1,1,1,1,1,3,3,2,2  ,2,2,2,3,3,1,2,2,2,2},
		{15,11,1,1,1,1,2,2,2,2   ,2,2,3,3,3,3,3,3,3,2   ,2,2,2,2,2,2,2,1,1,1    ,5,1,1,1,1,1,2,3,3,2  ,2,2,3,3,1,2,2,2,2,2},
		{12,15,11,1,1,1,1,2,2,2  ,2,3,3,3,3,3,3,3,3,3   ,2,2,2,2,2,2,2,1,1,1    ,5,1,1,1,2,1,1,1,3,3  ,3,3,3,1,2,2,2,2,2,2},
		{1,12,15,11,1,1,1,1,2,2  ,2,2,3,3,3,3,2,2,2,3   ,3,2,2,2,2,2,1,1,1,1    ,5,1,1,2,2,2,1,1,1,1  ,1,1,1,2,2,2,2,2,2,2},
		{1,1,12,15,11,1,1,1,1,2  ,2,2,2,2,3,3,2,2,2,2   ,3,3,2,2,2,1,1,1,1,1    ,5,1,1,2,2,2,2,2,2,2  ,2,2,2,2,2,2,2,2,2,2},
		{1,1,1,12,15,11,1,1,1,1  ,2,2,2,2,2,3,2,2,2,2   ,3,2,2,2,1,1,1,1,1,13   ,16,1,1,2,2,2,2,2,2,2 ,2,2,2,2,2,2,2,2,2,2},
		{2,1,1,1,12,15,11,1,1,1 ,1,2,2,2,2,2,2,2,2,2    ,2,1,1,2,1,1,1,1,13,14  ,10,1,1,2,2,2,2,2,2,2 ,2,2,2,2,2,2,2,2,2,2},
		{2,2,1,1,1,12,15,11,1,1 ,1,1,2,2,2,2,2,2,2,2    ,2,1,1,1,1,1,1,13,14,10 ,1,1,1,2,2,2,2,2,2,2  ,2,2,2,2,2,2,2,2,2,2},

		{2,2,2,1,1,1,12,15,11,1 ,1,1,1,2,2,2,2,2,2,2    ,2,1,1,1,1,1,13,14,10,1 ,1,1,1,2,2,2,2,2,2,2  ,2,2,2,2,2,2,2,2,2,2},
		{2,2,2,2,1,1,1,12,15,11 ,1,1,1,1,2,2,2,2,2,2    ,2,1,1,1,1,13,14,10,1,1 ,1,1,1,2,2,2,2,2,2,2  ,2,2,2,2,2,2,2,2,2,2},
		{2,2,2,2,2,1,1,1,12,15  ,11,1,1,1,1,2,2,2,2,2   ,2,1,1,1,13,14,10,1,1,1 ,1,1,1,1,2,2,2,2,2,2  ,2,2,2,2,2,2,2,2,2,2},
		{2,2,2,2,2,2,1,1,1,12   ,15,11,1,1,1,1,2,2,2,2  ,1,1,1,13,14,10,1,1,1,1 ,1,1,1,1,2,2,2,2,2,2  ,2,2,2,2,2,2,2,2,2,2},
		{2,2,2,2,2,2,1,1,1,1    ,12,15,11,1,1,1,2,2,2,2 ,1,1,13,14,10,1,1,1,1,2 ,2,1,2,2,2,2,2,2,2,2  ,2,2,2,2,2,2,2,2,2,2},
		{2,2,2,2,2,2,2,1,1,1    ,1,12,17,1,1,1,2,2,2,2  ,1,13,14,10,1,1,1,2,2,2 ,2,2,2,2,2,2,2,2,2,2  ,2,2,2,2,2,2,2,2,2,2},
		{2,2,2,2,2,2,2,1,1,1    ,1,1,5,1,1,1,3,2,2,2    ,1,19,10,1,1,1,2,2,2,2  ,2,2,2,2,2,2,2,2,2,2  ,2,2,2,2,2,2,2,2,2,2},
		{2,2,2,2,2,2,2,2,1,1    ,1,1,5,1,1,1,3,2,2,2    ,1,5,1,1,1,2,2,2,2,2    ,2,2,2,2,2,2,2,2,2,2  ,2,2,2,2,2,2,2,2,2,2},
		{2,2,2,2,2,2,2,2,1,1    ,1,1,5,1,1,1,3,2,2,2    ,1,5,1,1,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,2,2  ,2,2,2,2,2,2,2,2,2,2},
		{2,2,2,2,2,2,2,2,2,1    ,1,1,5,1,1,1,3,2,2,2    ,1,5,1,1,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,2,2  ,2,2,2,2,2,2,2,2,2,1},

		{2,2,2,2,2,2,2,2,2,1    ,1,1,5,1,1,1,2,3,2,2    ,1,5,1,2,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,2,2  ,2,2,2,2,2,2,2,2,1,1},
		{2,2,2,2,2,2,2,2,2,1    ,1,1,5,1,1,1,2,2,2,2    ,1,5,1,2,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,2,2  ,2,2,2,2,2,2,2,2,13,14},
		{2,2,2,2,2,2,2,2,2,1    ,1,1,18,11,1,1,1,2,2,2  ,1,5,1,1,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,2,2  ,2,2,2,2,2,1,1,13,14,10},
		{2,2,2,2,2,2,2,2,2,1    ,1,1,12,15,11,1,1,1,2,2 ,1,5,1,1,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,2,2  ,2,2,2,2,2,1,13,14,10,1},
		{2,2,2,2,2,2,2,2,2,1    ,1,1,1,12,15,11,1,1,1,2 ,1,5,1,2,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,2,2  ,2,2,2,1,1,13,14,10,1,1},
		{2,2,2,2,2,2,2,2,2,1    ,1,1,1,1,12,15,11,1,1,2 ,1,5,1,2,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,2,2  ,2,2,1,1,13,14,10,1,1,1},
		{2,2,2,2,2,2,2,2,2,1    ,1,1,1,1,1,12,15,11,1,1 ,1,5,1,2,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,2,2  ,2,1,1,13,14,10,1,1,1,1},
		{2,2,2,2,2,2,2,2,2,2    ,2,2,2,1,1,1,12,15,11,1 ,1,5,1,2,2,2,2,2,2,1    ,1,2,2,2,2,2,2,2,2,2  ,1,1,13,14,10,1,1,1,1,1},
		{2,2,2,2,2,2,2,2,2,2    ,2,2,2,2,1,1,1,12,15,11 ,1,5,1,2,2,2,2,2,2,1    ,1,2,2,2,2,1,1,1,1,1  ,1,13,14,10,1,1,1,2,1,1},
		{2,2,2,2,2,2,2,2,2,2    ,2,2,2,2,2,1,1,1,12,15  ,11,5,1,1,1,1,1,1,1,1   ,1,1,1,1,1,1,1,1,1,1  ,13,14,10,1,1,1,1,2,2,2},

		{2,2,2,2,2,2,2,2,2,2    ,2,2,2,2,2,2,2,1,1,12   ,15,5,1,1,1,1,1,1,1,1   ,1,1,1,1,1,1,1,1,1,1  ,19,10,1,1,1,1,2,2,2,2},
		{2,2,2,2,2,2,2,2,2,2    ,2,2,2,2,2,2,2,1,1,1    ,13,10,4,4,4,4,4,4,4,4  ,4,4,4,4,4,4,4,4,4,4  ,7,1,1,1,1,2,2,2,2,2},
		{2,2,2,2,2,2,2,2,2,2    ,2,2,2,2,2,2,1,1,1,13   ,14,10,1,1,1,1,1,1,1,1  ,1,1,1,1,1,1,1,1,1,1  ,1,1,1,1,1,2,2,2,2,2},
		{2,2,2,2,2,2,2,2,2,2    ,2,2,2,2,2,1,1,1,13,14  ,10,1,1,1,1,1,1,1,1,1   ,1,1,1,1,1,1,1,1,1,1  ,1,2,1,2,1,2,2,2,2,2},
		{2,2,2,2,2,2,2,2,2,2    ,2,2,2,2,1,1,1,13,14,10 ,1,1,1,1,1,1,1,1,1,1    ,1,1,1,1,1,2,1,2,1,1  ,1,2,1,2,1,2,2,2,2,2},
		{2,2,2,2,2,2,2,2,2,2    ,2,2,2,1,1,1,13,14,10,1 ,1,1,2,1,1,1,1,1,1,3    ,3,1,1,2,2,2,1,2,1,1  ,3,2,1,2,1,2,2,2,2,2},
		{2,2,2,2,2,2,2,2,2,2    ,2,2,1,1,1,13,14,10,1,1 ,1,1,2,1,1,1,2,1,1,3    ,3,3,3,3,3,3,3,3,3,3  ,3,2,2,2,2,2,2,2,2,2},
		{2,2,2,2,2,2,2,2,2,2    ,1,1,1,1,13,14,10,1,1,1 ,1,1,2,2,2,2,3,3,3,3    ,3,3,3,3,3,3,3,3,3,3  ,1,2,2,2,2,2,2,2,2,2},
		{2,2,2,2,2,2,2,2,2,1    ,1,1,1,13,14,10,1,1,1,1 ,1,1,2,2,2,3,3,3,3,3    ,3,3,3,3,3,2,2,2,1,2  ,2,2,2,2,2,2,2,2,2,2},
		{2,2,2,2,2,2,2,2,2,1    ,1,1,13,14,10,1,1,1,1,2 ,1,1,2,2,2,3,2,2,3,2    ,2,3,3,3,3,2,2,2,1,2  ,2,2,2,2,2,2,1,2,2,2},

		{2,2,2,2,2,2,2,2,1,1    ,1,13,14,10,1,1,2,1,2,2 ,2,2,2,2,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,1,2  ,2,2,2,2,2,1,1,2,2,2},
		{2,2,2,2,2,2,2,2,1,1    ,13,14,10,1,1,1,2,2,2,2 ,2,2,2,2,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,1,2  ,2,2,2,1,2,1,2,2,2,2},
		{2,2,2,2,2,2,2,1,13     ,14,10,1,1,2,2,2,2,2,2  ,2,2,2,2,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,2,2  ,2,2,2,1,2,1,2,2,2,2},
		{2,2,2,2,2,2,2,1,13,14  ,10,1,1,1,2,2,2,2,2,2   ,2,2,2,2,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,2,2  ,2,1,2,1,2,1,2,2,2,1},
		{2,2,2,2,2,2,2,1,19,10  ,1,1,1,2,2,2,2,3,2,2    ,2,2,2,2,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,2,2  ,2,1,2,1,1,1,2,2,2,1},
		{2,2,2,2,2,2,1,1,18,11  ,1,2,1,2,2,2,2,3,2,2    ,2,2,2,2,2,2,2,1,1,2    ,2,2,2,2,2,2,2,2,2,2  ,2,1,2,1,1,2,2,2,1,1},
		{2,2,2,2,2,2,1,1,12,15  ,11,1,2,2,2,2,2,3,2,2   ,2,2,2,2,2,2,2,1,1,1    ,2,2,2,2,2,2,2,1,2,1  ,2,1,1,1,1,2,2,2,1,1},
		{2,2,2,2,2,2,1,1,1,12   ,15,11,1,2,2,2,2,2,2,2  ,2,2,2,2,2,2,2,1,1,1    ,1,2,2,2,2,2,2,1,2,1  ,2,1,1,1,1,2,2,2,1,1},
		{2,2,2,2,2,2,1,1,1,1    ,12,15,11,1,2,2,2,2,2,2 ,2,2,2,2,2,2,2,1,1,1   ,2,2,2,2,2,2,2,1,1,1   ,2,1,1,1,1,2,2,2,1,1},
		{2,2,2,2,2,1,1,1,1,1    ,1,12,15,11,1,2,2,2,2,2 ,2,2,2,2,2,2,2,1,1,1   ,2,2,2,2,2,2,1,1,1,1   ,1,1,1,2,2,2,2,1,1,1},

		{2,2,2,2,2,2,1,1,1,1    ,1,1,12,15,11,1,2,2,2,1 ,2,2,2,2,1,2,1,1,1,1   ,2,3,3,2,2,2,1,1,1,1   ,1,1,1,2,2,2,2,1,1,2},
		{2,2,2,2,2,2,2,2,1,2    ,1,1,1,12,17,1,2,2,2,1  ,1,1,1,2,1,2,1,1,1,1   ,2,3,3,2,2,2,1,1,1,1   ,1,1,1,2,2,2,1,1,1,2},
		{2,2,2,2,2,2,2,2,2,2    ,1,1,1,1,5,1,1,2,2,1    ,1,1,1,1,1,2,1,1,1,1   ,2,3,3,2,2,2,1,1,1,1   ,1,1,1,1,2,1,1,1,1,2},
		{2,2,2,2,2,2,2,2,2,2    ,1,1,1,1,5,1,1,2,2,1    ,1,1,1,1,1,2,1,1,1,1   ,2,3,3,2,2,1,1,2,1,2   ,2,2,1,1,1,1,1,2,1,2},
		{2,2,2,2,2,2,2,2,2,2    ,1,1,1,1,4,1,2,2,2,2    ,1,1,1,1,1,2,1,1,1,1   ,2,2,2,2,2,1,1,2,2,2   ,2,2,2,1,1,1,2,2,2,2},
		{2,2,2,2,2,2,2,2,2,2    ,2,1,1,1,5,1,2,2,2,2    ,1,1,1,1,1,2,1,1,1,1   ,2,2,2,2,2,1,1,2,2,2   ,2,2,2,1,1,1,2,2,2,2},
		{2,2,2,2,2,2,2,2,2,2    ,2,1,1,1,5,1,2,2,2,2    ,2,1,1,2,2,2,2,1,1,1   ,2,2,2,2,2,1,1,2,2,2   ,2,2,2,2,1,1,2,2,2,2},
		{2,2,2,2,2,2,2,2,2,2    ,2,1,1,1,5,1,1,2,2,2    ,2,2,2,2,2,2,2,1,1,1   ,2,2,2,2,1,1,1,2,2,2   ,2,2,2,2,1,2,2,2,2,2},
		{2,2,2,2,2,2,2,2,2,1    ,2,1,1,1,5,1,1,2,2,2    ,2,2,2,2,2,2,2,1,1,1   ,2,2,2,2,1,1,1,2,2,2   ,2,2,2,2,2,2,2,2,2,2},
		{2,2,2,2,2,2,2,2,1,1    ,2,1,1,1,5,1,2,2,2,2    ,2,2,2,2,2,2,2,2,1,2   ,2,2,2,1,1,1,1,2,2,2   ,2,2,2,2,2,2,2,2,2,2},

		{2,2,2,2,2,2,2,2,1,1    ,1,1,1,13,16,1,2,2,2,2  ,2,2,2,2,2,2,2,2,2,1   ,2,2,2,1,1,1,2,2,2,2   ,2,2,2,2,3,2,2,2,2,2},
		{2,2,2,2,2,2,2,2,1,13   ,1,1,13,14,10,1,2,2,2,1 ,2,2,2,2,2,2,2,2,2,1   ,2,2,2,1,1,1,2,2,2,2   ,2,2,2,2,3,2,2,2,2,2},
		{2,2,2,2,2,1,1,1,13,14  ,1,13,14,10,1,1,2,2,2,1 ,1,1,1,2,2,2,1,2,2,2   ,2,2,2,1,1,1,2,1,2,2   ,2,2,3,3,3,2,2,2,2,1},
		{2,2,2,2,2,1,1,13,14,10  ,13,14,10,1,1,1,2,2,2,1 ,1,1,1,2,2,2,1,2,2,2   ,2,2,2,1,1,1,2,1,2,2   ,2,2,3,3,3,2,2,2,2,1},
		{2,2,2,2,1,1,13,14,10,1  ,14,10,1,1,2,2,1,2,2,2  ,1,1,1,1,2,2,1,2,2,2   ,2,2,2,1,1,2,2,1,1,2   ,2,3,3,3,3,2,2,2,2,1},
		{2,2,1,1,1,13,14,10,1,1  ,10,1,1,1,2,2,2,2,2,2   ,1,1,1,1,2,2,1,2,2,2   ,2,2,2,1,1,2,2,1,1,2   ,3,3,3,3,1,2,2,2,2,1},
		{2,2,1,1,13,14,10,1,1,1  ,1,1,1,2,2,2,2,2,2,2    ,1,1,1,1,2,2,2,2,2,2   ,2,2,2,1,1,2,2,1,1,3   ,3,3,1,2,1,2,2,2,2,2},
		{2,2,1,1,19,10,1,1,1,2   ,1,1,2,2,2,2,2,2,2,2    ,2,1,3,2,1,2,2,2,2,2   ,2,2,2,1,2,2,2,1,3,3   ,3,3,1,2,1,2,1,1,1,2},
		{2,2,1,1,5,1,1,2,2,2     ,1,2,2,2,2,2,2,2,2,2    ,2,2,3,2,1,2,2,2,2,2   ,2,2,2,1,2,2,2,3,3,3   ,3,1,2,2,2,2,1,1,1,2},
		{2,2,1,1,5,1,1,2,2,2     ,1,2,2,2,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,2,2   ,2,2,2,2,2,2,2,3,3,3   ,2,1,2,2,2,1,2,1,1,2},
		
		{2,2,1,1,5,1,1,2,2,2     ,1,2,2,2,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,2,2   ,2,2,2,2,2,3,3,3,3,1   ,2,1,2,2,2,1,2,2,1,1},
		{2,2,1,1,5,1,1,2,2,2     ,2,2,2,2,2,2,2,3,2,2    ,2,2,2,2,2,2,2,2,2,2   ,2,2,2,2,3,3,3,3,2,1   ,2,2,2,2,2,1,2,2,1,1},
		{2,2,1,1,5,1,1,2,2,2     ,2,2,2,2,2,2,3,3,3,1    ,2,2,2,2,2,2,2,2,2,2   ,2,2,2,3,3,3,2,2,2,1   ,2,2,2,2,2,2,2,2,2,1},
		{2,2,1,1,5,1,1,2,2,2     ,2,2,2,2,2,3,3,3,3,3    ,2,2,2,2,2,2,2,2,2,3   ,3,2,3,3,3,2,2,2,2,2   ,2,2,1,2,2,2,2,2,2,1},
		{2,2,1,1,5,1,1,2,2,2     ,2,2,2,2,2,2,3,3,3,1    ,2,2,2,2,2,2,2,2,3,3   ,3,3,3,3,2,2,2,2,2,2   ,2,2,1,2,2,2,2,2,2,1},
		{2,2,1,1,5,1,1,2,2,2     ,2,2,2,2,2,2,2,3,2,1    ,2,2,2,2,2,2,2,2,3,3   ,3,3,3,2,2,2,2,2,2,2   ,2,2,1,2,2,2,2,2,2,2},
		{2,2,1,1,5,1,1,2,2,2     ,2,2,2,2,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,3,3   ,2,3,2,2,2,2,2,2,2,2   ,2,2,1,2,2,9,4,6,2,2},
		{2,2,1,1,5,1,1,2,2,2     ,2,2,2,2,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,3,3   ,2,2,2,2,2,2,2,2,2,2   ,2,2,2,2,2,5,20,5,2,2 },
		{2,2,1,1,5,1,1,2,2,2     ,2,2,2,2,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,2,2   ,2,2,2,2,2,2,2,2,2,2   ,1,2,2,2,1,8,4,7,2,2},
		{2,2,1,1,5,1,1,2,2,2     ,2,2,2,2,2,2,2,2,2,2    ,2,2,2,2,2,2,2,2,2,2   ,2,2,2,2,2,2,2,2,2,2   ,1,2,2,2,1,1,2,2,2,2 }


  /*{2, 2, 2, 2, 2,  2, 2, 2, 2, 1, 1, 1, 11, 15, 12,  1,  1,  1, 2,   2,  2,  2,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2,  2,  2,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2,  2,  2,  2,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{2, 2, 2, 2, 2,  2, 2, 2, 2, 2, 1, 1,  1, 11, 15, 12,  1,  1, 1,   2,  2,  2,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2,  2,  2,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2,  2,  2,  2,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{2, 2, 3, 3, 3,  3, 3, 3, 2, 2, 1, 1,  1,  1, 11, 15, 12,  1, 1,   1,  2,  2,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2,  2,  2,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2,  2,  2,  1,  1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
	{2, 2, 3, 3, 3,  3, 3, 3, 3, 2, 2, 1,  1,  1,  1, 11, 15, 12, 1,   1,  1,  2,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2,  2,  2,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2,  2,  2,  1,  1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
	{2, 2, 3, 3, 3,  3, 3, 3, 3, 3, 2, 2,  1,  1,  1,  1, 11, 15, 12,  1,  1,  1,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2,  2,  2,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2,  2,  1,  1, 13, 19, 5, 5, 5, 5, 5, 5, 5, 5, 5},
	{2, 2, 3, 3, 3, 21, 3, 3, 3, 2, 2, 2,  2,  1,  1,  1,  1, 11, 15, 12,  1,  1,  1,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2,  2,  2,  2,  2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  1,  1,  1, 13, 14, 10, 1, 1, 1, 1, 1, 1, 1, 1, 1},
	{2, 2, 3, 2, 2,  4, 2, 2, 2, 2, 2, 2,  2,  2,  1,  1,  1,  1, 11, 15, 12,  1,  1,  1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2,  2,  1,  1,  1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  1,  1, 13, 14, 10,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
	{2, 2, 2, 2, 2,  4, 2, 2, 2, 2, 2, 2,  2,  2,  2,  1,  1,  1,  1, 11, 15, 12,  1,  1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  1,  1,  1,  1,  1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  1, 13, 14, 10,  1,  1, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{2, 2, 2, 2, 2,  6, 5, 2, 2, 2, 2, 2,  2,  2,  2,  2,  1,  1,  1,  1, 11, 15, 12,  1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 13, 19, 18, 12,  1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 13, 14, 10,  1,  1,  1, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{2, 2, 2, 2, 2,  2, 2, 2, 2, 2, 2, 2,  2,  2,  2,  2,  2,  1,  1,  1,  1, 11, 15, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,13, 14, 10, 11, 15, 12, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 13,14, 10,  1,  1,  1,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	                                                                                                                                                                                                                                                                                                          H
	{2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 11, 15, 12, 1,  1, 1, 1, 1, 1, 1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2, 2,  2, 2,  1,  1,  1,  1, 13, 14, 10, 1, 1, 11, 15, 12,  1,  1,  1, 1, 1, 1, 2, 2, 2, 2, 2, 1,   1,  1, 13, 14, 10, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1,  1, 11, 15, 12, 1, 1, 1, 1, 1, 1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2, 2,  2, 2,  1,  1,  1, 13, 14, 10,  1, 1, 2,  1, 11, 15, 12,  1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1,   1, 13, 14, 10,  1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 3, 3, 3, 2, 2, 2, 2, 1, 1,  1,  1, 11, 17, 5, 5, 5, 5, 5, 5, 18, 12,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2, 2,  2, 1,  1,  1, 13, 14, 10,  1,  1, 1, 1,  2,  1, 11, 15, 12,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  13, 14, 10,  1,  1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 3, 3, 3, 2, 2, 2, 2, 2, 1,  1,  1,  1,  1, 1, 1, 1, 1, 1, 1, 11, 15, 12,  1,  1,  1,  2,  2,  2,  2,  2,  2, 2,  1, 1,  1, 13, 14, 10,  1,  1,  1, 2, 2,  2,  2,  1, 11, 15, 12, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 10,  1,  1,  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2,  1,  1,  1,  1, 1, 1, 1, 1, 1, 1,  1, 11, 15, 12,  1,  1,  1,  2,  2,  2,  2,  2, 1,  1, 1, 13, 14, 10,  1,  1,  2,  2, 2, 2,  2,  2,  2,  1, 11, 17, 5, 5, 5, 5, 5, 5, 5, 5, 16, 10,  1,  1,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 2, 2, 2, 2,  2,  1,  1,  1, 1, 1, 1, 1, 1, 1,  1,  1, 11, 15, 12,  1,  1,  1,  2,  2,  2,  1, 1,  1, 13,14, 10,  1,  1,  1,  2,  2, 2, 2,  2,  2,  2,  2,  1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1,   1,  1,  1,  2,  2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2},
	{2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2,  2,  2,  2,  2, 3, 3, 3, 3, 2, 2,  1,  1,  1, 11, 15, 12,  1,  1,  2,  2,  1,  1, 1, 13, 14 10,  1,  1,  2,  2,  2,  2, 2, 2,  2,  2,  2,  2,  2,  2, 1, 1, 2, 2, 2, 1, 1, 2, 2,   2,  2,  2,  1,  2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2},
	{2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2,  2,  2,  2,  2, 2, 2, 2, 2, 3, 2,  2,  1,  1,  1, 11, 15,  12, 1,  1,  1,  1,  1, 13,14, 10, 1,  1,  1,  1,  2,  2,  2, 3, 3,  3,  2,  2,  2,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2,   2,  2,  2,  2,  2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2},
	{2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2,  2,  2,  2,  2, 2, 2, 2, 2, 2, 2,  2,  2,  1,  1,  1, 11, 15, 12,  1,  1,  1, 13, 14,10,  1, 1,  1,  1,  2,  2,  2,  2, 2, 2,  2,  2,  2,  2,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2,   2,  2,  2,  2,  2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2},
	{2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2,  2,  2,  2,  2, 2, 2, 2, 2, 2, 2,  2,  2,  2,  2,  1,  1, 11, 15, 12,  1, 13, 14, 10, 1,  1, 1,  1,  2,  2,  2,  2,  2, 2, 2,  2,  2,  2,  2,  1,  1, 1, 1, 2, 2, 2, 2, 2, 2, 2,   1,  1,  1,  2,  2, 2, 2, 2, 2, 2, 2, 1, 3, 1, 1, 2, 2, 2, 2},
	                                                                                                                                                                                                                                                                                     H
	{2, 2,  2,  2,  2,  2,  2,  2,  2, 2, 2, 2, 2, 2, 2, 3, 3,  3,  2,  2,  2,  2,  2, 1,   1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11, 15, 13, 14, 10, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{1, 1,  1,  1,  1,  1,  1,  2,  2, 2, 2, 2, 2, 2, 2, 2, 3,  2,  1,  1,  1,  1,  1, 1,   1, 13, 19,5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,  5,  5, 10, 10,  1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{1, 1,  1,  1,  1,  1,  1,  1,  1, 2, 2, 2, 2, 2, 2, 2, 2,  2,  1,  1,  1,  1,  1, 1,  13  14, 10,1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1,  1,  4,  1,  1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{1, 1,  1,  1,  1,  1,  1,  1,  1, 1, 2, 2, 2, 2, 2, 2, 2,  2,  2,  1,  1,  1,  1, 13, 14, 10, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2,  1,  1,  4,  1,  1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{5, 5, 18, 12,  1,  1,  1,  1,  1, 1, 2, 2, 2, 2, 2, 2, 2,  1,  1,  1,  1,  1, 13, 14, 10,  1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  1,  1,  4,  1,  1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{1, 1, 11, 15, 12,  1,  1,  1,  1, 2, 2, 2, 2, 2, 2, 2, 1,  1,  1,  1,  1, 13, 14, 10,  1,  1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  1,  1,  4,  1,  1, 1, 1, 1, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{2, 1,  1, 11, 15, 12,  1,  1,  1, 2, 2, 2, 2, 2, 2, 1, 1,  1,  1,  1, 13, 14, 10, 1,   1,  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  1,  1,  4,  1,  1, 1, 1, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{1, 1,  1,  1, 11, 15, 12,  1,  1, 1, 1, 1, 1, 1, 1, 1, 1,  1,  1, 13, 14, 10,  1, 1,   1,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  1,  1,  4,  1,  1, 1, 1, 1, 3, 3, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{1, 1,  1,  1,  1, 11, 15, 12,  1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 13, 14, 10,  1,  1, 1,   1,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  1,  1,  4,  1,  1, 1, 1, 1, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2},
	{2, 1,  1,  1,  1,  1, 11, 15, 12, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 10,  1,  1,  1, 1,   2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,  1,  1,  4,  1,  1, 1, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2},
	                                                                                                                                                                                                                                                                   H
	{2, 2, 2, 1, 1, 1, 1,11,17, 5, 5, 5, 5, 5, 5, 5, 5,16,10, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 4, 1, 1, 1, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2},
	{3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 4, 1, 1, 1, 1, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2},
	{3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 4, 1, 1, 1, 1, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2},
	{3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 4, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2},
	{3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 4, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2},
	{2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 4, 1, 1, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2},
	{2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 4, 1, 1, 1, 1, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 4, 1, 1, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{1, 1, 3, 3, 2, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 4, 1, 1, 1, 1, 3, 3, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{1, 1, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 4, 1, 1, 1, 1, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2},
	                                                                                                                                                                                                                                                                             H
	{1, 1, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2,   2,  2,  2,  2,  1,  1, 13, 19, 7, 1, 1, 1, 3, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1},
	{1, 1, 3, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2,   2,  2,  2,  1,  1, 13, 14, 10, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{2, 1, 3, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2,   2,  2,  1,  1, 13, 14, 10,  1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2},
	{1, 1, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2,   2,  1,  1, 13, 14, 10,  1,  1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
	{1, 1, 1, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  2,   2,  1, 13, 14, 10,  1,  1,  1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2},
	{2, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  1,   1, 13, 14, 10,  1,  1,  1,  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 9, 5, 8, 1, 2},
	{1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  1,  13, 14, 10,  1,  1,  1,  1,  2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 4, 20, 4, 2, 2},
	{2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  13, 14, 10,  1,  1,  1,  2,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 6, 5, 7, 2, 2},
	{2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 13, 14, 10,  1,  1,  1,  1,  1,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1},
	{2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 14, 10,  1,  1,  1,  1,  1,  1,  2,  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2}*/
};


	for (int i = 0; i < width; i++)
	{
		for (int j = 0; j < height; j++)
		{
			if (popArray[i][j] == 1)
			{
				gridArray[i][j].gCost = 2;
			}

			else if (popArray[i][j] == 2)
			{
				gridArray[i][j].gCost = 3;
			}

			else if (popArray[i][j] == 3)
			{
				gridArray[i][j].gCost = 10;
			}

			else if (popArray[i][j] >= 4)
			{
				gridArray[i][j].gCost = 1;
			}
			gridArray[i][j].closed = false;
			gridArray[i][j].xPos = i;
			gridArray[i][j].yPos = j;
		}
	}

	
}

void pathfind(int xStart, int yStart, int xEnd, int yEnd)
{

	int x = xStart;
	int y = yStart;

	node* start = &gridArray[x][y];

	//gcost is already set in the grid initialization
	gridArray[x][y].hCost = start->getHcost(xEnd, yEnd);
	gridArray[x][y].setFcost(xEnd, yEnd);
	gridArray[x][y].fCost = start->getFcost();
	//need to set the fcost, hcost and gcost for the start node,

	while (!foundExit)
	{
		Coord currentPos = { x, y };
		if (x == xEnd && y == yEnd)
		{
			std::cout << " you reached the end...woooo, your not as dumb as you thought! positive minset!!" << std::endl;
			foundExit = true;
			break;
		}
		/*---------------------
		  |	   |	 |      |
		  |  NW  |  N  |  NE  |
		  |X-1Y-1| Y-1 |X+1Y-1|
		  ---------------------
		  |      |     |      |
		  |   W  |  P  |  E   |
		  |X-1   |     |  X+1 |
		  ---------------------
		  |      |     |      |
		  |  SW  |  S  |  SE  |
		  |X-1Y+1| Y+1 |X+1Y+1|
		  ---------------------*/

		if (x > 0 && x < width - 1 && y > 0 && y < height - 1)
		{

			//then i need to increase the gcost for the nodes next to it by its cost
			//NW
			if (gridArray[x - 1][y - 1].closed == false)
			{
				gridArray[x - 1][y - 1].gCost += gridArray[xStart][yStart].gCost;
				//then calculate the hcost and add it to the g cost which gives me the f cost
				gridArray[x - 1][y - 1].hCost = gridArray[x - 1][y - 1].getHcost(xEnd, yEnd);
				gridArray[x - 1][y - 1].setFcost(xEnd, yEnd);

				gridArray[x - 1][y - 1].xParent = x;
				gridArray[x - 1][y - 1].yParent = y;
				openList.push(gridArray[x - 1][y - 1]);
			}
			//N
			if (gridArray[x][y - 1].closed == false)
			{
				gridArray[x][y - 1].gCost += gridArray[xStart][yStart].gCost;
				gridArray[x][y - 1].hCost = gridArray[x][y - 1].getHcost(xEnd, yEnd);
				gridArray[x][y - 1].setFcost(xEnd, yEnd);
				gridArray[x][y - 1].xParent = x;
				gridArray[x][y - 1].yParent = y;

				openList.push(gridArray[x][y - 1]);
			}

			//NE
			if (gridArray[x + 1][y - 1].closed == false)
			{
				gridArray[x + 1][y - 1].gCost += gridArray[xStart][yStart].gCost;
				gridArray[x + 1][y - 1].hCost = gridArray[x + 1][y - 1].getHcost(xEnd, yEnd);
				gridArray[x + 1][y - 1].setFcost(xEnd, yEnd);
				gridArray[x + 1][y - 1].xParent = x;
				gridArray[x + 1][y - 1].yParent = y;

				openList.push(gridArray[x + 1][y - 1]);
			}

			//E
			if (gridArray[x + 1][y].closed == false)
			{
				gridArray[x + 1][y].gCost += gridArray[xStart][yStart].gCost;
				gridArray[x + 1][y].hCost = gridArray[x + 1][y].getHcost(xEnd, yEnd);
				gridArray[x + 1][y].setFcost(xEnd, yEnd);
				gridArray[x + 1][y].xParent = x;
				gridArray[x + 1][y].yParent = y;

				openList.push(gridArray[x + 1][y]);
			}

			//SE
			if (gridArray[x + 1][y + 1].closed == false)
			{
				gridArray[x + 1][y + 1].gCost += gridArray[xStart][yStart].gCost;
				gridArray[x + 1][y + 1].hCost = gridArray[x + 1][y + 1].getHcost(xEnd, yEnd);
				gridArray[x + 1][y + 1].setFcost(xEnd, yEnd);
				gridArray[x + 1][y + 1].xParent = x;
				gridArray[x + 1][y + 1].yParent = y;

				openList.push(gridArray[x + 1][y + 1]);
			}

			//S
			if (gridArray[x][y + 1].closed == false)
			{
				gridArray[x][y + 1].gCost += gridArray[xStart][yStart].gCost;
				gridArray[x][y + 1].hCost = gridArray[x][y + 1].getHcost(xEnd, yEnd);
				gridArray[x][y + 1].setFcost(xEnd, yEnd);
				gridArray[x][y + 1].xParent = x;
				gridArray[x][y + 1].yParent = y;

				openList.push(gridArray[x][y + 1]);
			}

			//SW
			if (gridArray[x - 1][y + 1].closed == false)
			{
				gridArray[x - 1][y + 1].gCost += gridArray[xStart][yStart].gCost;
				gridArray[x - 1][y + 1].hCost = gridArray[x - 1][y + 1].getHcost(xEnd, yEnd);
				gridArray[x - 1][y + 1].setFcost(xEnd, yEnd);
				gridArray[x - 1][y + 1].xParent = x;
				gridArray[x - 1][y + 1].yParent = y;

				openList.push(gridArray[x - 1][y + 1]);
			}

			//W
			if (gridArray[x - 1][y].closed == false)
			{
				gridArray[x - 1][y].gCost += gridArray[xStart][yStart].gCost;
				gridArray[x - 1][y].hCost = gridArray[x - 1][y].getHcost(xEnd, yEnd);
				gridArray[x - 1][y].setFcost(xEnd, yEnd);
				gridArray[x - 1][y].xParent = x;
				gridArray[x - 1][y].yParent = y;

				openList.push(gridArray[x - 1][y]);
			}
		}

		//get PQ.top
		gridArray[x][y].closed = true;
		std::cout << "X: " << openList.top().xPos << " , " << openList.top().yPos << std::endl;
		x = openList.top().xPos;
		y = openList.top().yPos;
		openList.pop();
		coord.push_back(currentPos);
		
	}



}

void run()
{

	// randomly select start and finish locations
	int xStart = 1;
	int	yStart = 1;
	int xEnd = 86;
	int yEnd = 46;
	initialiseGrid(gridArray);
	pathfind(xStart, yStart, xEnd, yEnd);

	for (auto& item : coord)
	{
		std::cout << item.x << " , " << item.y << std::endl;
	}



}
